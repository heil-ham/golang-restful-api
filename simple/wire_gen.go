// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package simple

import (
	"github.com/google/wire"
)

// Injectors from injector.go:

func InitializedService(ErrBool bool) (*SimpleService, error) {
	simpleRepository := NewSimpleRepository(ErrBool)
	simpleService, err := NewSimpleService(simpleRepository)
	if err != nil {
		return nil, err
	}
	return simpleService, nil
}

func InitializedDatabase() *DatabaseRepository {
	databaseMysql := NewDatabaseMysql()
	databaseMongo := NewDatabaseMongo()
	databaseRepository := NewDatabaseRepository(databaseMysql, databaseMongo)
	return databaseRepository
}

func InitializedFooBar() *FooBarService {
	fooRepository := NewFooRepository()
	fooService := NewFooService(fooRepository)
	barRepository := NewBarRepository()
	barService := NewBarService(barRepository)
	fooBarService := NewFooBarService(fooService, barService)
	return fooBarService
}

func InitializedHello() *SayHelloService {
	sayHelloImpl := NewSayHelloImpl()
	sayHelloService := NewSayHelloService(sayHelloImpl)
	return sayHelloService
}

func InitializedConnection(name string) (*Connection, func()) {
	file, cleanup := NewFile(name)
	connection, cleanup2 := NewConnection(file)
	return connection, func() {
		cleanup2()
		cleanup()
	}
}

// injector.go:

var fooSet = wire.NewSet(NewFooRepository, NewFooService)

var barSet = wire.NewSet(NewBarRepository, NewBarService)

var helloSet = wire.NewSet(
	NewSayHelloImpl, wire.Bind(new(SayHello), new(*SayHelloImpl)),
)
